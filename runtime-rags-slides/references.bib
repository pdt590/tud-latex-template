% This file was created with JabRef 2.10.
% Encoding: UTF8


@Misc{OMG-MOF,
  Title                    = {Meta-Object Facility (MOF) Specification, Version 2.5.1},

  Author                   = {Object Management Group (OMG)},
  HowPublished             = {OMG Document Number formal/2016-11},
  Year                     = {2016},

  Url                      = {http://www.omg.org/spec/MOF/2.5.1}
}

@InProceedings{albano1991relationship,
  Title                    = {A Relationship Mechanism for a Strongly Typed Object-Oriented Database Programming Language.},
  Author                   = {Albano, Antonio and Ghelli, Giorgio and Orsini, Renzo},
  Booktitle                = {VLDB},
  Year                     = {1991},
  Pages                    = {565--575},
  Volume                   = {91}
}

@InProceedings{alevizos_being_2014,
  Title                    = {Being {Logical} or {Going} with the {Flow}? {A Comparison} of {Complex Event Processing Systems}},
  Author                   = {Alevizos, Elias and Artikis, Alexander},
  Booktitle                = {Artificial {Intelligence}: {Methods} and {Applications}},
  Year                     = {2014},
  Month                    = may,
  Pages                    = {460--474},
  Publisher                = {Springer},
  Series                   = {Lecture {Notes} in {Computer} {Science}},

  Doi                      = {10.1007/978-3-319-07064-3_40},
  Shorttitle               = {Being {Logical} or {Going} with the {Flow}?}
}

@InProceedings{burger11,
  Title                    = {Reference Attribute Grammars for Metamodel Semantics},
  Author                   = {B{\"u}rger, Christoff
and Karol, Sven
and Wende, Christian
and A{\ss}mann, Uwe},
  Booktitle                = {Software Language Engineering},
  Year                     = {2011},

  Address                  = {Berlin, Heidelberg},
  Editor                   = {Malloy, Brian
and Staab, Steffen
and van den Brand, Mark},
  Pages                    = {22--41},
  Publisher                = {Springer}
}

@InProceedings{burger15,
  Title                    = {Reference Attribute Grammar Controlled Graph Rewriting: Motivation and Overview},
  Author                   = {B\"{u}rger, Christoff},
  Booktitle                = {Proceedings of the 2015 ACM SIGPLAN International Conference on Software Language Engineering},
  Year                     = {2015},

  Address                  = {New York, NY, USA},
  Pages                    = {89--100},
  Publisher                = {ACM},
  Series                   = {SLE 2015},

  Acmid                    = {2814257},
  ISBN                     = {978-1-4503-3686-4},
  Keywords                 = {dynamic evaluation, graph rewriting, memoization, reference attribute grammar},
  Location                 = {Pittsburgh, PA, USA},
  Numpages                 = {12}
}

@InProceedings{balzer2011,
  Title                    = {Verifying Multi-object Invariants with Relationships},
  Author                   = {Balzer, Stephanie
and Gross, Thomas R.},
  Booktitle                = {ECOOP 2011 -- Object-Oriented Programming},
  Year                     = {2011},

  Address                  = {Berlin, Heidelberg},
  Editor                   = {Mezini, Mira},
  Pages                    = {358--382},
  Publisher                = {Springer},

  Doi                      = {10.1007/978-3-642-22655-7_17},
  ISBN                     = {978-3-642-22655-7}
}

@Book{benelallam_raising_2017,
  Title                    = {Raising {Time Awareness} in {Model-Driven Engineering}},
  Author                   = {Benelallam, Amine and Hartmann, Thomas and Mouline, Ludovic and Fouquet, Fran√ßois and Bourcier, Johann and Barais, Olivier and Le Traon, Yves},
  Publisher                = {Springer},
  Year                     = {2017},
  Month                    = sep,

  Doi                      = {10.1109/MODELS.2017.11},
  ISBN                     = {978-1-5386-3492-9}
}

@InProceedings{bergmann2015viatra,
  Title                    = {Viatra 3: A Reactive Model Transformation Platform},
  Author                   = {Bergmann, G{\'a}bor
and D{\'a}vid, Istv{\'a}n
and Heged{\"u}s, {\'A}bel
and Horv{\'a}th, {\'A}kos
and R{\'a}th, Istv{\'a}n
and Ujhelyi, Zolt{\'a}n
and Varr{\'o}, D{\'a}niel},
  Booktitle                = {Theory and Practice of Model Transformations},
  Year                     = {2015},

  Address                  = {Cham},
  Editor                   = {Kolovos, Dimitris
and Wimmer, Manuel},
  Pages                    = {101--110},
  Publisher                = {Springer International Publishing},

  Abstract                 = {Model-driven tools frequently rely on advanced technologies to support model queries, view maintenance, design rule validation, model transformations or design space exploration. Some of these features are initiated explicitly by domain engineers (batch execution) while others are executed automatically when certain trigger events are detected (live execution). Unfortunately, their integration into a complex industrial modeling environment is difficult due to hidden interference and unspecified interaction between different features. In this paper, we present a reactive, event-driven model transformation platform over EMF models, which captures tool features as model queries and transformations, and provides a systematic, well-founded integration between a variety of such tool features. Viatra 3 offers a family of internal DSLs (i.e. dedicated libraries) to specify advanced tool features built on top of existing languages like EMF-IncQuery and Xtend. Its main innovation is a source incremental execution scheme built on the reactive programming paradigm ssupported by an event-driven virtual machine.},
  ISBN                     = {978-3-319-21155-8}
}

@InProceedings{bierman2005,
  Title                    = {First-Class Relationships in an Object-Oriented Language},
  Author                   = {Gavin Bierman and Alisdair Wren},
  Booktitle                = {ECOOP 2005 - Object-Oriented Programming},
  Year                     = {2005},
  Pages                    = {262--286},
  Publisher                = {Springer}
}

@Article{bock1998more,
  Title                    = {A more complete model of relations and their implementation: Roles},
  Author                   = {Bock, Conrad and Odell, James},
  Journal                  = {Journal of Object-Oriented Programming},
  Year                     = {1998},
  Number                   = {2},
  Volume                   = {11},

  Publisher                = {SIGS PUBLICATIONS INC 71 WEST 23RD ST, 3RD FLOOR, NEW YORK, NY 10010 USA}
}

@InProceedings{chen_complex_2014,
  Title                    = {Complex event processing for the {Internet} of {Things} and its applications},
  Author                   = {Chen, C. Y. and Fu, J. H. and Sung, T. and Wang, P. F. and Jou, E. and Feng, M. W.},
  Booktitle                = {2014 {IEEE} {International} {Conference} on {Automation} {Science} and {Engineering} ({CASE})},
  Year                     = {2014},
  Month                    = aug,
  Pages                    = {1144--1149},

  Doi                      = {10.1109/CoASE.2014.6899470}
}

@Article{cugola_introducing_2015,
  Title                    = {Introducing uncertainty in complex event processing: model, implementation, and validation},
  Author                   = {Cugola, Gianpaolo and Margara, Alessandro and Matteucci, Matteo and Tamburrelli, Giordano},
  Journal                  = {Computing},
  Year                     = {2015},

  Month                    = feb,
  Number                   = {2},
  Pages                    = {103--144},
  Volume                   = {97},

  Doi                      = {10.1007/s00607-014-0404-y},
  ISSN                     = {0010-485X, 1436-5057},
  Shorttitle               = {Introducing uncertainty in complex event processing}
}

@InProceedings{davies2006generation,
  Title                    = {On the generation of object databases using booster},
  Author                   = {Davies, Jim and Welch, James and Cavarra, Alessandra and Crichton, Edward},
  Booktitle                = {Engineering of Complex Computer Systems, 2006. ICECCS 2006. 11\textsuperscript{th} IEEE International Conference on},
  Year                     = {2006},
  Organization             = {IEEE},
  Pages                    = {10--pp}
}

@InProceedings{fors15,
  Title                    = {JavaRAG: A Java Library for Reference Attribute Grammars},
  Author                   = {Fors, Niklas and Cedersj\"{o}, Gustav and Hedin, G\"{o}rel},
  Booktitle                = {Proceedings of the 14\textsuperscript{th} International Conference on Modularity},
  Year                     = {2015},

  Address                  = {New York, NY, USA},
  Pages                    = {55--67},
  Publisher                = {ACM},
  Series                   = {MODULARITY 2015},

  Acmid                    = {2724572},
  Doi                      = {10.1145/2724525.2724572},
  ISBN                     = {978-1-4503-3249-1},
  Keywords                 = {Java, Modularity, compilers, embedded language, extensibility, library, reference attribute grammars, reflection},
  Location                 = {Fort Collins, CO, USA},
  Numpages                 = {13}
}

@Misc{tinkerpop,
  Title                    = {Apache TinkerPop},

  Author                   = {The Apache Software Foundation},
  Year                     = {2018},

  Url                      = {http://tinkerpop.apache.org/}
}

@InProceedings{gluche1997incremental,
  Title                    = {Incremental updates for materialized OQL views},
  Author                   = {Gluche, Dieter
and Grust, Torsten
and Mainberger, Christof
and Scholl, Marc H.},
  Booktitle                = {Deductive and Object-Oriented Databases},
  Year                     = {1997},

  Address                  = {Berlin, Heidelberg},
  Editor                   = {Bry, Fran{\c{c}}ois
and Ramakrishnan, Raghu
and Ramamohanarao, Kotagiri},
  Pages                    = {52--66},
  Publisher                = {Springer},

  Abstract                 = {This work discusses the CROQUE approach to the maintenance problem for materialized views. In a CROQUE database, application-specified collections (type extents or classes) themselves need not be materialized. In exchange, the system maintains (redundant) views of the application data that help to minimize query response time. We understand views as functions of database objects and examine algebraic properties of these functions, in particular linearity, to derive incremental update plans. It turns out that it is feasible to employ ODMG OQL as a view definition language --- instead of inventing a specialized one --- in such an environment, since the majority of its clauses represent linear functions.},
  Doi                      = {10.1007/3-540-63792-3_8},
  ISBN                     = {978-3-540-69647-6}
}

@InProceedings{hammer2015,
  Title                    = {Incremental Computation with Names},
  Author                   = {Hammer, Matthew A. and Dunfield, Joshua and Headley, Kyle and Labich, Nicholas and Foster, Jeffrey S. and Hicks, Michael and Van Horn, David},
  Booktitle                = {Proceedings of the 2015 ACM SIGPLAN International Conference on Object-Oriented Programming, Systems, Languages, and Applications},
  Year                     = {2015},

  Address                  = {New York, NY, USA},
  Pages                    = {748--766},
  Publisher                = {ACM},
  Series                   = {OOPSLA 2015},

  Acmid                    = {2814305},
  Doi                      = {10.1145/2814270.2814305},
  ISBN                     = {978-1-4503-3689-5},
  Location                 = {Pittsburgh, PA, USA},
  Numpages                 = {19}
}

@InProceedings{hammer2014adapton,
  Title                    = {Adapton: Composable, Demand-driven Incremental Computation},
  Author                   = {Hammer, Matthew A. and Phang, Khoo Yit and Hicks, Michael and Foster, Jeffrey S.},
  Booktitle                = {Proceedings of the 35th ACM SIGPLAN Conference on Programming Language Design and Implementation},
  Year                     = {2014},

  Address                  = {New York, NY, USA},
  Pages                    = {156--166},
  Publisher                = {ACM},
  Series                   = {PLDI '14},

  Acmid                    = {2594324},
  Doi                      = {10.1145/2594291.2594324},
  ISBN                     = {978-1-4503-2784-8},
  Keywords                 = {call-by-push-value (CBPV), demanded computation graph (DCG) incremental computation, laziness, self-adjusting computation, thunks},
  Location                 = {Edinburgh, United Kingdom},
  Numpages                 = {11}
}

@InProceedings{harkes2014,
  Title                    = {Unifying and Generalizing Relations in Role-Based Data Modeling and Navigation},
  Author                   = {Harkes, Daco
and Visser, Eelco},
  Booktitle                = {Software Language Engineering},
  Year                     = {2014},

  Address                  = {Cham},
  Editor                   = {Combemale, Beno{\^i}t
and Pearce, David J.
and Barais, Olivier
and Vinju, Jurgen J.},
  Pages                    = {241--260},
  Publisher                = {Springer},

  Abstract                 = {Object-oriented programming languages support concise navigation of relations represented by references. However, relations are not first-class citizens and bidirectional navigation is not supported. The relational paradigm provides first-class relations, but with bidirectional navigation through verbose queries. We present a systematic analysis of approaches to modeling and navigating relations. By unifying and generalizing the features of these approaches, we developed the design of a data modeling language that features first-class relations, n-ary relations, native multiplicities, bidirectional relations and concise navigation.},
  ISBN                     = {978-3-319-11245-9}
}

@InProceedings{harkes2016icedust,
  Title                    = {{IceDust: Incremental and Eventual Computation of Derived Values in Persistent Object Graphs}},
  Author                   = {Daco C. Harkes and Danny M. Groenewegen and Eelco Visser},
  Booktitle                = {30th European Conference on Object-Oriented Programming (ECOOP 2016)},
  Year                     = {2016},

  Address                  = {Dagstuhl, Germany},
  Editor                   = {Shriram Krishnamurthi and Benjamin S. Lerner},
  Pages                    = {11:1--11:26},
  Publisher                = {Schloss Dagstuhl--Leibniz-Zentrum fuer Informatik},
  Series                   = {Leibniz International Proceedings in Informatics (LIPIcs)},
  Volume                   = {56},

  Annote                   = {Keywords: Incremental Computing, Data Modeling, Domain Specific Language},
  Doi                      = {10.4230/LIPIcs.ECOOP.2016.11},
  ISBN                     = {978-3-95977-014-9},
  ISSN                     = {1868-8969},
  Urn                      = {urn:nbn:de:0030-drops-61059}
}

@InProceedings{harkes2017icedust,
  Title                    = {{IceDust 2: Derived Bidirectional Relations and Calculation Strategy Composition}},
  Author                   = {Daco C. Harkes and Eelco Visser},
  Booktitle                = {31st European Conference on Object-Oriented Programming (ECOOP 2017)},
  Year                     = {2017},

  Address                  = {Dagstuhl, Germany},
  Editor                   = {Peter M{\"u}ller},
  Pages                    = {14:1--14:29},
  Publisher                = {Schloss Dagstuhl--Leibniz-Zentrum fuer Informatik},
  Series                   = {Leibniz International Proceedings in Informatics (LIPIcs)},
  Volume                   = {74},

  Annote                   = {Keywords: Incremental Computing, Data Modeling, Domain Specific Language},
  Doi                      = {10.4230/LIPIcs.ECOOP.2017.14},
  ISBN                     = {978-3-95977-035-4},
  ISSN                     = {1868-8969},
  Urn                      = {urn:nbn:de:0030-drops-72518}
}

@PhdThesis{hartmann_enabling_2016,
  Title                    = {Enabling {Model-Driven Live Analytics For Cyber-Physical Systems}: {The Case} of {Smart Grids}},
  Author                   = {Hartmann, Thomas},
  School                   = {University of Luxembourg, ‚ÄãLuxembourg, ‚Äã‚ÄãLuxembourg},
  Year                     = {2016},
  Month                    = nov,

  File                     = {Full Text PDF:/home/rschoene/.zotero/zotero/b2b7luco.default/zotero/storage/5JFPZWNX/Hartmann - 2016 - Enabling Model-Driven Live Analytics For Cyber-Phy.pdf:application/pdf},
  Keywords                 = {ToRead},
  Language                 = {en},
  Shorttitle               = {Enabling {Model}-{Driven} {Live} {Analytics} {For} {Cyber}-{Physical} {Systems}},
  Url                      = {http://orbilu.uni.lu/handle/10993/28924},
  Urldate                  = {2018-04-30}
}

@InProceedings{hartmann_native_2014,
  Title                    = {A {Native Versioning Concept} to {Support Historized Models} at {Runtime}},
  Author                   = {Hartmann, Thomas and Fouquet, Francois and Nain, Gregory and Morin, Brice and Klein, Jacques and Barais, Olivier and Traon, Yves Le},
  Booktitle                = {Model-{Driven} {Engineering} {Languages} and {Systems}},
  Year                     = {2014},

  Address                  = {Cham},
  Month                    = sep,
  Pages                    = {252--268},
  Publisher                = {Springer},
  Series                   = {Lecture {Notes} in {Computer} {Science}},

  Abstract                 = {Models@run.time provides semantically rich reflection layers enabling intelligent systems to reason about themselves and their surrounding context. Most reasoning processes require not only to explore the current state, but also the past history to take sustainable decisions e.g. to avoid oscillating between states. Models@run.time and model-driven engineering in general lack native mechanisms to efficiently support the notion of history, and current approaches usually generate redundant data when versioning models, which reasoners need to navigate. Because of this limitation, models fail in providing suitable and sustainable abstractions to deal with domains relying on history-aware reasoning. This paper tackles this issue by considering history as a native concept for modeling foundations. Integrated, in conjunction with lazy load/storage techniques, into the Kevoree Modeling Framework, we demonstrate onto a smart grid case study, that this mechanisms enable a sustainable reasoning about massive historized models.},
  Doi                      = {10.1007/978-3-319-11653-2_16},
  ISBN                     = {978-3-319-11652-5 978-3-319-11653-2},
  Keywords                 = {Important},
  Language                 = {en},
  Urldate                  = {2018-04-30}
}

@InProceedings{hartmann_stream_2015,
  Title                    = {Stream my models: {Reactive} peer-to-peer distributed models@run.time},
  Author                   = {Hartmann, T. and Moawad, A. and Fouquet, F. and Nain, G. and Klein, J. and Traon, Y. Le},
  Booktitle                = {2015 {ACM}/{IEEE} 18\textsuperscript{th} {International} {Conference} on {Model} {Driven} {Engineering} {Languages} and {Systems} ({MODELS})},
  Year                     = {2015},
  Month                    = sep,
  Pages                    = {80--89},

  Abstract                 = {The models@run.time paradigm promotes the use of models during the execution of cyber-physical systems to represent their context and to reason about their runtime behaviour. However, current modeling techniques do not allow to cope at the same time with the large-scale, distributed, and constantly changing nature of these systems. In this paper, we introduce a distributed models@run.time approach, combining ideas from reactive programming, peer-to-peer distribution, and large-scale models@run.time. We define distributed models as observable streams of chunks that are exchanged between nodes in a peer-to-peer manner. A lazy loading strategy allows to transparently access the complete virtual model from every node, although chunks are actually distributed across nodes. Observers and automatic reloading of chunks enable a reactive programming style. We integrated our approach into the Kevoree Modeling Framework and demonstrate that it enables frequently changing, reactive distributed models that can scale to millions of elements and several thousand nodes.},
  Doi                      = {10.1109/MODELS.2015.7338238},
  Keywords                 = {distributed processing, Peer-to-peer computing, Models@run.time, Object oriented modeling, Important, Load modeling, Runtime, Biological system modeling, Programming, Data models, Asynchronous programming, cyber-physical system, Distributed models, distributed models@run.time approach, Kevoree modeling framework, large-scale models@run.time, lazy loading strategy, Peer-to-peer, peer-to-peer computing, reactive peer-to-peer distributed models, reactive programming, Reactive programming},
  Shorttitle               = {Stream my models}
}

@Article{hartmann_next_2017,
  Title                    = {The next evolution of {MDE}: a seamless integration of machine learning into domain modeling},
  Author                   = {Hartmann, Thomas and Moawad, Assaad and Fouquet, Francois and Traon, Yves Le},
  Journal                  = {Software \& Systems Modeling},
  Year                     = {2017},

  Month                    = may,
  Pages                    = {1--20},

  Abstract                 = {Machine learning algorithms are designed to resolve unknown behaviors by extracting commonalities over massive datasets. Unfortunately, learning such global behaviors can be inaccurate and slow for systems composed of heterogeneous elements, which behave very differently, for instance as it is the case for cyber-physical systems and Internet of Things applications. Instead, to make smart decisions, such systems have to continuously refine the behavior on a per-element basis and compose these small learning units together. However, combining and composing learned behaviors from different elements is challenging and requires domain knowledge. Therefore, there is a need to structure and combine the learned behaviors and domain knowledge together in a flexible way. In this paper we propose to weave machine learning into domain modeling. More specifically, we suggest to decompose machine learning into reusable, chainable, and independently computable small learning units, which we refer to as microlearning units. These microlearning units are modeled together with and at the same level as the domain data. We show, based on a smart grid case study, that our approach can be significantly more accurate than learning a global behavior, while the performance is fast enough to be used for live learning.},
  Doi                      = {10.1007/s10270-017-0600-2},
  ISSN                     = {1619-1366, 1619-1374},
  Language                 = {en},
  Shorttitle               = {The next evolution of {MDE}},
  Urldate                  = {2018-04-30}
}

@Article{hedin2000reference,
  Title                    = {Reference attributed grammars},
  Author                   = {Hedin, G{\"o}rel},
  Journal                  = {Informatica (Slovenia)},
  Year                     = {2000},
  Number                   = {3},
  Pages                    = {301--317},
  Volume                   = {24}
}

@Article{jastadd,
  Title                    = {{JastAdd: an aspect-oriented compiler con\-struc\-tion system}},
  Author                   = {G{\"o}rel Hedin and Eva Magnusson},
  Journal                  = {Science of Computer Programming},
  Year                     = {2003},
  Number                   = {1},
  Pages                    = {37--58},
  Volume                   = {47},

  Doi                      = {10.1016/S0167-6423(02)00109-0},
  ISSN                     = {0167-6423},
  Publisher                = {Elsevier}
}

@InProceedings{hinkel_nmf:_2018,
  Title                    = {{NMF}: {A Multi}-platform {Modeling Framework}},
  Author                   = {Hinkel, Georg},
  Booktitle                = {Theory and {Practice} of {Model} {Transformation}},
  Year                     = {2018},

  Address                  = {Cham},
  Month                    = jun,
  Pages                    = {184--194},
  Publisher                = {Springer},
  Series                   = {Lecture {Notes} in {Computer} {Science}},

  Abstract                 = {For its promises in terms of increased productivity, Model-driven engineering (MDE) is getting applied increasingly often in both industry and academia. However, most tools currently available are based on the Eclipse Modeling Framework (EMF) and hence based on the Java platform whereas tool support for other platforms is limited. This leads to a language and tool adoption problem for developers of other platforms such as .NET. As a result, few projects on the .NET platform adopt MDE. In this paper, we present the .NET Modeling Framework (NMF), a tool set for model repositories, model-based incrementalization, model transformation, model synchronization and code generation that is now available for a multitude of different operating systems, including Windows, Linux, Android, iOS and Mac. The framework makes intensive use of the C\# language as host language for model transformation and synchronization languages, whereas the model repository serialization is compatible with EMF. This solves the language adoption problem for C\# programmers and creates a bridge to the EMF platform.},
  ISBN                     = {978-3-319-93316-0 978-3-319-93317-7},
  Language                 = {en},
  Shorttitle               = {{NMF}},
  Urldate                  = {2018-07-02}
}

@InProceedings{hinkel_influence_nodate,
  Title                    = {On the Influence of Metamodel Design to Analyses and Transformations},
  Author                   = {Hinkel, Georg
and Burger, Erik},
  Booktitle                = {Modelling Foundations and Applications},
  Year                     = {2018},

  Address                  = {Cham},
  Editor                   = {Pierantonio, Alfonso
and Trujillo, Salvador},
  Pages                    = {63--79},
  Publisher                = {Springer},

  ISBN                     = {978-3-319-92997-2}
}

@InProceedings{hinkel_predicting_2018,
  Title                    = {Predicting the {Perceived Modularity} of {MOF}-based {Metamodels}},
  Author                   = {Hinkel, Georg and Strittmatter, Misha},
  Booktitle                = {Proceedings of the 6\textsuperscript{th} {International} {Conference} on {Model}-{Driven} {Engineering} and {Software} {Development}},
  Year                     = {2018},

  File                     = {Fulltext:/home/rschoene/.zotero/zotero/b2b7luco.default/zotero/storage/UPJVYSPJ/Hinkel and Strittmatter - 2018 - Predicting the Perceived Modularity of MOF-based M.pdf:application/pdf},
  Keywords                 = {ToRead}
}

@Article{hudson89,
  Title                    = {Cactis: A Self-adaptive, Concurrent Implementation of an Object-oriented Database Management System},
  Author                   = {Hudson, Scott E. and King, Roger},
  Journal                  = {ACM Trans. Database Syst.},
  Year                     = {1989},

  Month                    = sep,
  Number                   = {3},
  Pages                    = {291--321},
  Volume                   = {14},

  Acmid                    = {68013},
  Address                  = {New York, NY, USA},
  Doi                      = {10.1145/68012.68013},
  ISSN                     = {0362-5915},
  Issue_date               = {Sept. 1989},
  Numpages                 = {31},
  Publisher                = {ACM}
}

@InProceedings{ireland2009classification,
  Title                    = {A classification of object-relational impedance mismatch},
  Author                   = {Ireland, Christopher and Bowers, David and Newton, Michael and Waugh, Kevin},
  Booktitle                = {Advances in Databases, Knowledge, and Data Applications, 2009. DBKDA'09. First International Conference on},
  Year                     = {2009},
  Organization             = {IEEE},
  Pages                    = {36--43}
}

@InProceedings{jaekel2015,
  Title                    = {Relationships for Dynamic Data Types in {RSQL}},
  Author                   = {Tobias J{\"a}kel and Thomas K{\"u}hn and Stefan Hinkel and Hannes Voigt and Wolfgang Lehner},
  Booktitle                = {Datenbanksysteme f{\"u}r Business, Technologie und Web (BTW)},
  Year                     = {2015},
  Pages                    = {157--176},

  Abstract                 = {Currently, there is a mismatch between the conceptual model of an information system and its implementation in a database management system (DBMS). Most of the conceptual modeling languages relate their conceptual entities with relationships, but relational database management systems solely rely on the notion of relations to model both, entities and relationships. To make things worse, real world objects are not static as assumed in such modeling languages, but change over time. Thus, modeling languages were enriched to model those scenarios, as well. However, mapping these models onto relational databases requires the use of object-relational mapping engines, which in turn hide the semantics of the conceptual model from the DBMS. Consequently, traditional relational database systems cannot directly ensure specific consistency constraints and thus lose their meaning as single point of truth for highly distributed information systems. To overcome these issues we have proposed RSQL, a data model and query language introducing role-based data structures in DBMSs. Despite the fact that RSQL is able to handle complex objects, it does not support relationships between those objects. Therefore, this work adds relationships to RSQL by augmenting the data model and extending its query language. As a result, this extension allows for the direct representation of conceptual models with complex objects and relationships in the DBMS. Thus, relationships can be directly addressed in queries and the DBMS automatically ensures relationship consistency constraints as well as cardinality. In sum, a DBMS equipped with the extended RSQL is apt for storing and querying conceptual models and thus regains its rightful position as the single point of truth for highly distributed information systems.},
  Owner                    = {thomas},
  Timestamp                = {2015.03.23}
}

@Article{jackson2002,
  Title                    = {Alloy: A Lightweight Object Modelling Notation},
  Author                   = {Jackson, Daniel},
  Journal                  = {ACM Trans. Softw. Eng. Methodol.},
  Year                     = {2002},

  Month                    = apr,
  Number                   = {2},
  Pages                    = {256--290},
  Volume                   = {11},

  Acmid                    = {505149},
  Address                  = {New York, NY, USA},
  Doi                      = {10.1145/505145.505149},
  ISSN                     = {1049-331X},
  Issue_date               = {April 2002},
  Keywords                 = {Object models, Z specification language, first-order logic},
  Numpages                 = {35},
  Publisher                = {ACM}
}

@Article{jayasekara_wihidum:_2015,
  Title                    = {Wihidum: {Distributed} complex event processing},
  Author                   = {Jayasekara, Sachini and Kannangara, Sameera and Dahanayakage, Tishan and Ranawaka, Isuru and Perera, Srinath and Nanayakkara, Vishaka},
  Journal                  = {Journal of Parallel and Distributed Computing},
  Year                     = {2015},

  Month                    = may,
  Pages                    = {42--51},
  Volume                   = {79-80},

  Abstract                 = {In the last few years, we have seen much interest in data processing technologies. Although initial interests focused on batch processing technologies like MapReduce, people have realized the need for more responsive technologies such as stream processing and complex event processing. Complex event processing has been historically used within a single node or a cluster of tightly interconnected nodes. However, to be effective with Big Data use-cases, CEP technologies need to be able to scale up to handle large use-cases. This paper presents several approaches to scale complex event processing by distributing it across several nodes. Wihidum discusses how to balance the workload among nodes efficiently, how complex event processing queries can be broken up into simple sub queries, and how queries can be efficiently deployed in the cluster. The paper focuses on three techniques used for scaling queries: pipelining, partitioning and distributed operators. Then it discusses in detail the distribution of few CEP operators: filters, joins, pattern matching, and partitions. Empirical results show that the techniques followed in Wihidum have improved the performance of the CEP solution.},
  Doi                      = {10.1016/j.jpdc.2015.03.002},
  ISSN                     = {0743-7315},
  Keywords                 = {Complex event processing, Distributed systems},
  Series                   = {Special {Issue} on {Scalable} {Systems} for {Big} {Data} {Management} and {Analytics}},
  Shorttitle               = {Wihidum},
  Url                      = {http://www.sciencedirect.com/science/article/pii/S0743731515000519},
  Urldate                  = {2018-04-27}
}

@InProceedings{jouault_efficient_2016,
  Title                    = {Efficient {OCL}-based {Incremental Transformations}.},
  Author                   = {Jouault, Fr√©d√©ric and Beaudoux, Olivier},
  Booktitle                = {16th International Workshop on OCL and Textual Modeling},
  Year                     = {2016},
  Pages                    = {121--136},

  File                     = {Fulltext:/home/rschoene/.zotero/zotero/b2b7luco.default/zotero/storage/JWIJHF73/Jouault and Beaudoux - 2016 - Efficient OCL-based Incremental Transformations..pdf:application/pdf;Snapshot:/home/rschoene/.zotero/zotero/b2b7luco.default/zotero/storage/ZRC4463E/Jouault and Beaudoux - 2016 - Efficient OCL-based Incremental Transformations..pdf:application/pdf}
}

@InProceedings{jouault2016efficient,
  Title                    = {Efficient OCL-based Incremental Transformations.},
  Author                   = {Jouault, Fr{\'e}d{\'e}ric and Beaudoux, Olivier},
  Booktitle                = {OCL@ MoDELS},
  Year                     = {2016},
  Pages                    = {121--136}
}

@InProceedings{jun_design_2014,
  Title                    = {Design of {Complex Event-Processing IDS} in {Internet} of {Things}},
  Author                   = {Jun, C. and Chi, C.},
  Booktitle                = {2014 {Sixth} {International} {Conference} on {Measuring} {Technology} and {Mechatronics} {Automation}},
  Year                     = {2014},
  Month                    = jan,
  Pages                    = {226--229},

  Abstract                 = {With the development of Internet of Things (IoT), there have been more and more services and applications deployed in physical spaces and information systems. Massive number of situation-aware sensors and devices are embedded in IoT environments, which produce huge amounts of data continuously for the IoT systems and platforms. Processing these data stream generated by the IoT networks with different patterns has raised new challenges for the real-time performance of intrusion detection system (IDS) in IoT environments, which has to react quickly to the hacking attacks and malicious activities to IoT. In recent years, Complex Event Processing (CEP) technology provides new solutions in the field of complex pattern identifications and real-time data processing, which can be used to improve the performance of traditional IDS in IoT environments. IDS integrated with CEP can be used to deal with patterns among events and process large volumes of messages with low latency. In this paper we proposed an event-processing IDS architecture in IoT environments on the basis of security requirements analysis for IDS. Then the implementation details for real-time event processing are also proposed, which is developed by Esper, a CEP engine for complex event processing and event series analysis.},
  Doi                      = {10.1109/ICMTMA.2014.57},
  Keywords                 = {Internet of Things, information systems, Automation, security of data, Internet, CEP technology, complex event-processing IDS design, data stream processing, event series analysis, intrusion detection system, IoT networks, Mechatronics, physical spaces, real-time event processing, security requirements analysis, situation-aware sensors}
}

@InProceedings{kuehn2015,
  Title                    = {A Combined Formal Model for Relational Context-Dependent Roles},
  Author                   = {K{\"u}hn, Thomas and B{\"o}hme, Stephan and G{\"o}tz, Sebastian and A{\ss}mann, Uwe},
  Booktitle                = {Proceedings of the 2015 ACM SIGPLAN International Conference on Software Language Engineering},
  Year                     = {2015},
  Organization             = {ACM},
  Pages                    = {113--124}
}

@InCollection{kuehn2014,
  Title                    = {A Metamodel Family for Role-Based Modeling and Programming Languages},
  Author                   = {K\"{u}hn, Thomas and Leuth\"{a}user, Max and G\"{o}tz, Sebastian and Seidl, Christoph and A\ss{}mann, Uwe},
  Booktitle                = {Software Language Engineering},
  Publisher                = {Springer},
  Year                     = {2014},
  Pages                    = {141--160},
  Series                   = {Lecture Notes in Computer Science},
  Volume                   = {8706},

  Language                 = {English},
  Owner                    = {thomas},
  Timestamp                = {2014.11.11}
}

@Article{kahani2018survey,
  Title                    = {Survey and classification of model transformation tools},
  Author                   = {Kahani, Nafiseh
and Bagherzadeh, Mojtaba
and Cordy, James R.
and Dingel, Juergen
and Varr{\'o}, Daniel},
  Journal                  = {Software {\&} Systems Modeling},
  Year                     = {2018},

  Month                    = mar,

  Abstract                 = {Model transformation lies at the very core of model-driven engineering, and a large number of model transformation languages and tools have been proposed over the last few years. These tools can be used to develop, transform, merge, exchange, compare, and verify models and metamodels. In this paper, we present a comprehensive catalog of existing metamodel-based transformation tools and compare them using a qualitative framework. We begin by organizing the 60 tools we identified into a general classification based on the transformation approach used. We then compare these tools using a number of particular facets, where each facet belongs to one of six different categories and may contain several attributes. The results of the study are discussed in detail and made publicly available in a companion website with a capability to search for tools using the specified facets as search criteria. Our study provides a thorough picture of the state-of-the-art in model transformation techniques and tools. Our results are potentially beneficial to many stakeholders in the modeling community, including practitioners, researchers, and transformation tool developers.},
  Day                      = {12},
  ISSN                     = {1619-1374}
}

@Article{knuth1968semantics,
  Title                    = {Semantics of context-free languages},
  Author                   = {Knuth, Donald E},
  Journal                  = {Mathematical systems theory},
  Year                     = {1968},
  Number                   = {2},
  Pages                    = {127--145},
  Volume                   = {2},

  Publisher                = {Springer}
}

@InCollection{konat_declarative_2012,
  Title                    = {Declarative {Name Binding} and {Scope Rules}},
  Author                   = {Konat, Gabri√´l and Kats, Lennart and Wachsmuth, Guido and Visser, Eelco},
  Booktitle                = {Software {Language} {Engineering}},
  Publisher                = {Springer, Berlin, Heidelberg},
  Year                     = {2012},
  Month                    = sep,
  Pages                    = {311--331},
  Series                   = {Lecture {Notes} in {Computer} {Science}},

  Abstract                 = {In textual software languages, names are used to reference elements like variables, methods, classes, etc. Name resolution analyses these names in order to establish references between definition and use sites of elements. In this paper, we identify recurring patterns for name bindings in programming languages and introduce a declarative metalanguage for the specification of name bindings in terms of namespaces, definition sites, use sites, and scopes. Based on such declarative name binding specifications, we provide a language-parametric algorithm for static name resolution during compile-time. We discuss the integration of the algorithm into the Spoofax Language Workbench and show how its results can be employed in semantic editor services like reference resolution, constraint checking, and content completion.},
  Doi                      = {10.1007/978-3-642-36089-3_18},
  File                     = {Full Text PDF:/home/rschoene/.zotero/zotero/b2b7luco.default/zotero/storage/2QLHW88C/Konat et al. - 2012 - Declarative Name Binding and Scope Rules.pdf:application/pdf},
  ISBN                     = {978-3-642-36088-6 978-3-642-36089-3},
  Keywords                 = {ToRead},
  Language                 = {en},
  Urldate                  = {2018-06-08}
}

@Article{magnusson2009demand,
  Title                    = {Demand-driven evaluation of collection attributes},
  Author                   = {Magnusson, Eva and Ekman, Torbj{\"o}rn and Hedin, G{\"o}rel},
  Journal                  = {Automated Software Engineering},
  Year                     = {2009},
  Number                   = {2},
  Pages                    = {291--322},
  Volume                   = {16},

  Publisher                = {Springer}
}

@Article{magnusson2007circular,
  Title                    = {Circular reference attributed grammars-their evaluation and applications},
  Author                   = {Magnusson, Eva and Hedin, G{\"o}rel},
  Journal                  = {Science of Computer Programming},
  Year                     = {2007},
  Number                   = {1},
  Pages                    = {21--37},
  Volume                   = {68},

  Publisher                = {Amsterdam: North-Holland Pub. Co., 1981-}
}

@MastersThesis{martensson_memory_2017,
  Title                    = {Memory {Optimization} in the {JastAdd Metacompiler}},
  Author                   = {M√•rtensson, Axel},
  School                   = {Lund University},
  Year                     = {2017},
  Month                    = sep,

  Abstract                 = {astAdd is a tool for generating programming language compilers. These compilers generally use more memory than other compilers for the same language.
In this thesis we have categorized the memory use of two JastAdd-generated
compilers, to identify opportunities to reduce their memory use. We present
several optimizations for reducing the memory use of these compilers. These
include changes to the runtime representation of the AST and memoization
in the code generated by JastAdd. We have implemented the optimizations in
JastAdd and benchmarked their performance with respect to memory use and
execution time. We see an overall reduction of the optimizable memory use
for the two compilers of approximately 5\% and 24\%.},
  File                     = {M√•rtensson - 2017 - Memory Optimization in the JastAdd Metacompiler.pdf:/home/rschoene/.zotero/zotero/b2b7luco.default/zotero/storage/HAMT5DTD/M√•rtensson - 2017 - Memory Optimization in the JastAdd Metacompiler.pdf:application/pdf},
  Language                 = {English},
  Url                      = {http://lup.lub.lu.se/student-papers/record/8923603}
}

@Article{mayer_predictable_2015,
  Title                    = {Predictable {Low-Latency Event Detection With Parallel Complex Event Processing}},
  Author                   = {Mayer, R. and Koldehofe, B. and Rothermel, K.},
  Journal                  = {IEEE Internet of Things Journal},
  Year                     = {2015},

  Month                    = aug,
  Number                   = {4},
  Pages                    = {274--286},
  Volume                   = {2},

  Abstract                 = {The tremendous number of sensors and smart objects being deployed in the Internet of Things (IoT) pose the potential for IT systems to detect and react to live-situations. For using this hidden potential, complex event processing (CEP) systems offer means to efficiently detect event patterns (complex events) in the sensor streams and therefore, help in realizing a ‚Äúdistributed intelligence‚Äù in the IoT. With the increasing number of data sources and the increasing volume at which data is produced, parallelization of event detection is crucial to limit the time events need to be buffered before they actually can be processed. In this paper, we propose a pattern-sensitive partitioning model for data streams that is capable of achieving a high degree of parallelism in detecting event patterns, which formerly could only consistently be detected in a sequential manner or at a low parallelization degree. Moreover, we propose methods to dynamically adapt the parallelization degree to limit the buffering imposed on event detection in the presence of dynamic changes to the workload. Extensive evaluations of the system behavior show that the proposed partitioning model allows for a high degree of parallelism and that the proposed adaptation methods are able to meet a buffering limit for event detection under high and dynamic workloads.},
  Doi                      = {10.1109/JIOT.2015.2397316},
  ISSN                     = {2327-4662},
  Keywords                 = {Internet of Things, quality of service, Event detection, Intelligent sensors, Monitoring, IoT, parallel processing, Adaptation models, Delays, data streams, buffering limit, Complex event processing (CEP), data parallelization, dynamic workloads, event pattern detection, IT systems, parallel complex event processing, pattern-sensitive partitioning model, predictable low-latency event detection, self-adaptation, stream processing}
}

@InProceedings{moawad_polymer:_2015,
  Title                    = {Polymer: {A} model-driven approach for simpler, safer, and evolutive multi-objective optimization development},
  Author                   = {Moawad, A. and Hartmann, T. and Fouquet, F. and Nain, G. and Klein, J. and Bourcier, J.},
  Booktitle                = {2015 3\textsuperscript{rd} {International} {Conference} on {Model}-{Driven} {Engineering} and {Software} {Development} ({MODELSWARD})},
  Year                     = {2015},
  Month                    = feb,
  Pages                    = {1--8},

  Abstract                 = {Multi-Objective Evolutionary Algorithms (MOEAs) have been successfully used to optimize various domains such as finance, science, engineering, logistics and software engineering. Nevertheless, MOEAs are still very complex to apply and require detailed knowledge about problem encoding and mutation operators to obtain an effective implementation. Software engineering paradigms such as domain-driven design aim to tackle this complexity by allowing domain experts to focus on domain logic over technical details. Similarly, in order to handle MOEA complexity, we propose an approach, using model-driven software engineering (MDE) techniques, to define fitness functions and mutation operators without MOEA encoding knowledge. Integrated into an open source modelling framework, our approach can significantly simplify development and maintenance of multi-objective optimizations. By leveraging modeling methods, our approach allows reusable optimizations and seamlessly connects MOEA and MDE paradigms. We evaluate our approach on a cloud case study and show its suitability in terms of i) complexity to implement an MOO problem, ii) complexity to adapt (maintain) this implementation caused by changes in the domain model and/or optimization goals, and iii) show that the efficiency and effectiveness of our approach remains comparable to ad-hoc implementations.},
  Keywords                 = {optimisation, computational complexity, Optimization, Object oriented modeling, Complexity theory, MDE, evolutionary computation, Cloning, Cloud computing, Encoding, Genetic Algorithms, Model-driven Engineering, model-driven software engineering, MOEA complexity, MOEA encoding knowledge, Multi-objective Evolutionary Algorithms, multiobjective evolutionary algorithms, multiobjective optimization development, mutation operators, Polymers, problem encoding, software engineering},
  Shorttitle               = {Polymer}
}

@Article{mouline_enabling_2018,
  Title                    = {Enabling {Temporal-Aware Contexts} for {Adaptative Distributed Systems}},
  Author                   = {Mouline, Ludovic and Benelallam, Amine and Hartmann, Thomas and Fouquet, Fran√ßois and Bourcier, Johann and Morin, Brice and Barais, Olivier},
  Journal                  = {SAC 2018: SAC 2018: Symposium on Applied Computing , April 9--13, 2018, Pau, France},
  Year                     = {2018},

  Month                    = apr,

  Doi                      = {10.1145/3167132.3167286},
  Keywords                 = {ToRead},
  Language                 = {en},
  Url                      = {http://orbilu.uni.lu/handle/10993/35423},
  Urldate                  = {2018-04-30}
}

@Article{murer2008managed,
  Title                    = {Managed evolution},
  Author                   = {Murer, Stephan and Worms, Carl and Furrer, Frank J},
  Journal                  = {Informatik-Spektrum},
  Year                     = {2008},
  Number                   = {6},
  Pages                    = {537--547},
  Volume                   = {31},

  Publisher                = {Springer}
}

@InProceedings{noble2008,
  Title                    = {First Class Relationships for {OO} Languages},
  Author                   = {Stephen Nelson and David J. Pearce and James Noble},
  Booktitle                = {Proceedings of the 6\textsuperscript{th} International Workshop on Multiparadigm Programming with Object-Oriented Languages (MPOOL 2008)},
  Year                     = {2008},

  Url                      = {http://hdl.handle.net/2142/11788}
}

@InProceedings{piechnick_towards_2014,
  Title                    = {Towards {Context Modeling} in {Space} and {Time}},
  Author                   = {Piechnick, Christian and P√ºschel, Georg and G√∂tz, Sebastian and K√ºhn, Thomas and Kaiser, Ronny and A√ümann, Uwe},
  Booktitle                = {First {Workshop} on {Model}-{Driven} {Robot} {Software} {Engineering}},
  Year                     = {2014},
  Month                    = jul,

  File                     = {Piechnick_2014_Towards Context.pdf:/home/rschoene/.zotero/zotero/b2b7luco.default/zotero/storage/ZK28KBU6/Piechnick_2014_Towards Context.pdf:application/pdf},
  Keywords                 = {Important},
  Url                      = {http://ceur-ws.org/Vol-1319/morse14_paper_04.pdf},
  Urldate                  = {2015-12-02}
}

@InProceedings{ramakrishnan1994,
  Title                    = {Efficient Incremental Evaluation of Queries with Aggregation},
  Author                   = {Ramakrishnan, Raghu and Ross, Kenneth A. and Srivastava, Divesh and Sudarshan, S.},
  Booktitle                = {Proceedings of the 1994 International Symposium on Logic Programming},
  Year                     = {1994},

  Address                  = {Cambridge, MA, USA},
  Pages                    = {204--218},
  Publisher                = {MIT Press},
  Series                   = {ILPS '94},

  Acmid                    = {200639},
  ISBN                     = {0-262-52191-1},
  Location                 = {Symposia, Melbourne},
  Numpages                 = {15}
}

@Book{rothenberg1989nature,
  Title                    = {The nature of modeling},
  Author                   = {Rothenberg, Jeff and Widman, Lawrence E and Loparo, Kenneth A and Nielsen, Norman R},
  Publisher                = {RAND Corporation},
  Year                     = {1989},

  Address                  = {Santa Monica, CA},
  Volume                   = {3027},

  Url                      = {https://www.rand.org/pubs/notes/N3027.html}
}

@InProceedings{rumbaugh1987,
  Title                    = {Relations as Semantic Constructs in an Object-Oriented Language},
  Author                   = {James E. Rumbaugh},
  Booktitle                = {OOPSLA},
  Year                     = {1987},
  Pages                    = {466--481}
}

@TechReport{soderberg12,
  Title                    = {{Incremental Evaluation of Reference Attribute Grammars using Dynamic Dependency Tracking}},
  Author                   = {S{\"o}derberg, Emma and Hedin, G{\"o}rel},
  Institution              = {{Lund University}},
  Year                     = {2012},
  Month                    = apr,
  Note                     = {LU-CS-TR:2012-249, ISSN 1404-1200},
  Number                   = {98}
}

@InProceedings{scholl1990relational,
  Title                    = {A relational object model},
  Author                   = {Scholl, Marc H.
and Schek, Hans-J{\"o}rg},
  Booktitle                = {ICDT '90},
  Year                     = {1990},

  Address                  = {Berlin, Heidelberg},
  Editor                   = {Abiteboul, Serge
and Kanellakis, Paris C.},
  Pages                    = {89--105},
  Publisher                = {Springer},

  Abstract                 = {The relational model and its extensions are often considered incompatible with object-orientation. However, on the one hand nested relations provide the complex object features demanded by object models. Particularly, powerful query languages exploit the complex data structure while keeping the advantages of the declarative, set-oriented paradigm. On the other hand, object models provide semantically rich constructs for advanced modeling, and abstractions of operations as well as data. In this paper, we show an evolutionary path from relational, essentially nested relational, to object-oriented data models and query languages. Basically, allowing nested relation schemes to be recursively defined yields the necessary flexibility w.r.t structure. The query language, i.e., nested relational algebra, carries over to this ``network'' model. As a first step towards the object-oriented integration of cooperative systems, different views onto the objects have to be supported. We present a powerful view definition facility that basically allows object views as well as relational views to be defined in our object algebra.},
  Doi                      = {10.1007/3-540-53507-1_72},
  ISBN                     = {978-3-540-46682-6}
}

@InProceedings{schone_incremental_2016,
  Title                    = {Incremental {Runtime}-generation of {Optimisation Problems} using {RAG}-controlled {Rewriting}},
  Author                   = {Sch√∂ne, Ren√© and G√∂tz, Sebastian and A√ümann, Uwe and B√ºrger, Christoff},
  Booktitle                = {Proceedings of the 11\textsuperscript{th} {International} {Workshop} on {Models}@run.time},
  Year                     = {2016},

  Address                  = {Saint-Malo},
  Month                    = oct,
  Publisher                = {ceur},

  Url                      = {http://ceur-ws.org/Vol-1742/}
}

@Article{steimann2000b,
  Title                    = {On the representation of roles in object-oriented and conceptual modelling},
  Author                   = {Friedrich Steimann},
  Journal                  = {Data \& Knowledge Engineering},
  Year                     = {2000},
  Number                   = {1},
  Pages                    = {83 - 106},
  Volume                   = {35},

  Doi                      = {https://doi.org/10.1016/S0169-023X(00)00023-9},
  ISSN                     = {0169-023X},
  Keywords                 = {Roles, Role-oriented modelling, Multiple and dynamic classification, Polymorphism},
  Url                      = {http://www.sciencedirect.com/science/article/pii/S0169023X00000239}
}

@Book{steinberg2008emf,
  Title                    = {{EMF}: Eclipse Modeling Framework},
  Author                   = {Steinberg, Dave and Budinsky, Frank and Merks, Ed and Paternostro, Marcelo},
  Publisher                = {Pearson Education},
  Year                     = {2008},

  ISBN                     = {978-0-13-270221-8},
  Keywords                 = {Computers / Programming Languages / Java},
  Langid                   = {english},
  Pagetotal                = {949},
  Shorttitle               = {{EMF}}
}

@Article{szarnyas_train_2017,
  Title                    = {The {Train Benchmark}: cross-technology performance evaluation of continuous model queries},
  Author                   = {Sz√°rnyas, G√°bor and Izs√≥, Benedek and R√°th, Istv√°n and Varr√≥, D√°niel},
  Journal                  = {Software \& Systems Modeling},
  Year                     = {2017},

  Month                    = jan,
  Pages                    = {1--29},

  Doi                      = {10.1007/s10270-016-0571-8},
  ISSN                     = {1619-1366, 1619-1374},
  Shorttitle               = {The {Train} {Benchmark}}
}

@Article{ujhelyi2015emf,
  Title                    = {EMF-IncQuery: An integrated development environment for live model queries},
  Author                   = {Ujhelyi, Zolt{\'a}n and Bergmann, G{\'a}bor and Heged{\"u}s, {\'A}bel and Horv{\'a}th, {\'A}kos and Izs{\'o}, Benedek and R{\'a}th, Istv{\'a}n and Szatm{\'a}ri, Zolt{\'a}n and Varr{\'o}, D{\'a}niel},
  Journal                  = {Science of Computer Programming},
  Year                     = {2015},
  Pages                    = {80--99},
  Volume                   = {98},

  Publisher                = {Elsevier}
}

@Article{varro_road_2016,
  Title                    = {Road to a reactive and incremental model transformation platform: three generations of the {VIATRA} framework},
  Author                   = {Varr√≥, D√°niel and Bergmann, G√°bor and Heged√ºs, √Åbel and Horv√°th, √Åkos and R√°th, Istv√°n and Ujhelyi, Zolt√°n},
  Journal                  = {Software \& Systems Modeling},
  Year                     = {2016},

  Month                    = jul,
  Number                   = {3},
  Pages                    = {609--629},
  Volume                   = {15},

  Abstract                 = {The current release of VIATRA provides open-source tool support for an event-driven, reactive model transformation engine built on top of highly scalable incremental graph queries for models with millions of elements and advanced features such as rule-based design space exploration complex event processing or model obfuscation. However, the history of the VIATRA model transformation framework dates back to over 16 years. Starting as an early academic research prototype as part of the M.Sc project of the the first author it first evolved into a Prolog-based engine followed by a family of open-source projects which by now matured into a component integrated into various industrial and open-source tools and deployed over multiple technologies. This invited paper briefly overviews the evolution of the VIATRA/IncQuery family by highlighting key features and illustrating main transformation concepts along an open case study influenced by an industrial project.},
  Doi                      = {10.1007/s10270-016-0530-4},
  File                     = {Full Text PDF:/home/rschoene/.zotero/zotero/b2b7luco.default/zotero/storage/IBBDU5QL/Varr√≥ et al. - 2016 - Road to a reactive and incremental model transform.pdf:application/pdf;Full Text PDF:/home/rschoene/.zotero/zotero/b2b7luco.default/zotero/storage/7TQJAJ8J/Varr√≥ et al. - 2016 - Road to a reactive and incremental model transform.pdf:application/pdf},
  ISSN                     = {1619-1366, 1619-1374},
  Keywords                 = {Reading},
  Language                 = {en},
  Shorttitle               = {Road to a reactive and incremental model transformation platform},
  Urldate                  = {2018-04-30}
}

@InProceedings{vinju2012what,
  Title                    = {What Does Control Flow Really Look Like? Eyeballing the Cyclomatic Complexity Metric},
  Author                   = {J. J. Vinju and M. W. Godfrey},
  Booktitle                = {2012 IEEE 12\textsuperscript{th} International Working Conference on Source Code Analysis and Manipulation},
  Year                     = {2012},
  Month                    = sep,
  Pages                    = {154--163},

  Doi                      = {10.1109/SCAM.2012.17}
}

@InProceedings{vogt1989higher,
  Title                    = {Higher Order Attribute Grammars},
  Author                   = {Vogt, H. H. and Swierstra, S. D. and Kuiper, M. F.},
  Booktitle                = {Proceedings of the ACM SIGPLAN 1989 Conference on Programming Language Design and Implementation},
  Year                     = {1989},

  Address                  = {New York, NY, USA},
  Pages                    = {131--145},
  Publisher                = {ACM},
  Series                   = {PLDI '89},

  Acmid                    = {74830},
  Doi                      = {10.1145/73141.74830},
  ISBN                     = {0-89791-306-X},
  Location                 = {Portland, Oregon, USA},
  Numpages                 = {15}
}

@InProceedings{yuan_study_2015,
  Title                    = {Study on distributed complex event processing in {Internet} of {Things} based on query plan},
  Author                   = {Yuan, L. and Xu, D. and Ge, G. and Zhu, M.},
  Booktitle                = {2015 {IEEE} {International} {Conference} on {Cyber} {Technology} in {Automation}, {Control}, and {Intelligent} {Systems} ({CYBER})},
  Year                     = {2015},
  Month                    = jun,
  Pages                    = {666--670},

  Abstract                 = {Complex event processing is an efficient method in data stream processing of Internet of things, but more of these methods are referred to a single complex event or a small quantity of events. Aiming at this problem, a distributed complex event processing architecture for Internet of things is presented in this paper, in which a distributed query plan of complex event process structure based on directed acyclic graph (DAG) is given, moreover, a distributed query-plan complex-event-processing algorithm based on directed acyclic graph is proposed. The complex tasks are decomposed into several simple sub-tasks which are processed in parallel with the corresponding operator nodes, to realize distributed processing and to improve the efficiency of processing and execution. The simulation results indicate that our method is more efficient in lower RAM consumption, processing time, and others, and the efficiency of data stream processing for Internet of things is improved.},
  Doi                      = {10.1109/CYBER.2015.7288020},
  File                     = {IEEE Xplore Full Text PDF:/home/rschoene/.zotero/zotero/b2b7luco.default/zotero/storage/569XVPRP/Yuan et al. - 2015 - Study on distributed complex event processing in I.pdf:application/pdf},
  Keywords                 = {Internet of Things, complex event processing, distributed processing, Algorithm design and analysis, query processing, Distributed databases, Engines, data stream processing, DAG, directed acyclic graph, directed graphs, distributed complex event processing architecture, distributed parallel processing, distributed query plan, Internet of things, media streaming, Memory management, query plan, Query processing, RAM consumption}
}

